{"remainingRequest":"/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/node_modules/babel-loader/lib/index.js!/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/node_modules/eslint-loader/index.js??ref--14-0!/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/src/utils/request.js","dependencies":[{"path":"/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/src/utils/request.js","mtime":1656247042112},{"path":"/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/babel.config.js","mtime":1650971271303},{"path":"/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/node_modules/cache-loader/dist/cjs.js","mtime":1650971228569},{"path":"/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/node_modules/babel-loader/lib/index.js","mtime":1650971231053},{"path":"/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/node_modules/eslint-loader/index.js","mtime":1650971225570}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vIHJlcXVlc3QuanMKCi8qCiDlr7lheGlvc+i/m+ihjOS6jOasoeWwgeijhSDor7fmsYLmi6bmiKrlmajlop7liqB0b2tlbiDlk43lupTmi6bmiKrlmajlpITnkIblpKfmlbDmja4KKi8KaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUvaW5kZXgnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBzZXRJdGVtLCBnZXRJdGVtLCByZW1vdmVpdGVtIH0gZnJvbSAnQC91dGlscy9zdG9yYWdlJzsKLyoK6Ieq5a6a5LmJ5YaZ5rOV77yaY29uc3QgeHh4ID0gYXhpb3MuY3JlYXRlKHt9KSDkuIDkuKrpobnnm67kuK3lj6/og73mnInkuI3lkIznmoTmnI3liqHlmajln7rnoYDlnLDlnYAg5bCx6KaB55So6Ieq5a6a5LmJ5YaZ5rOV6K6+572u5LiN5ZCM55qE5pyN5Yqh5Zmo5Z+656GA5Zyw5Z2ACiovCgp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICdodHRwOi8vMTI3LjAuMC4xOjgwMDAnCn0pOyAvLyDlnKhpbnN0YW5jZSjov5nmmK/kuIrpnaLlrprkuYnnmoToh6rlrprkuYlheGlvc+ivt+axguWQjeensCnkuIrmt7vliqDor7fmsYLmi6bmiKrlmagg6KGl5YWF6K+35rGC5aS0dG9rZW7kv6Hmga8KLy8g6K+35rGC5oum5oiq5ZmoCgppbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIHZhciB0b2tlbiA9IHN0b3JlLnN0YXRlLnRva2VuOwoKICBpZiAodG9rZW4pIHsKICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSAiSldUICIuY29uY2F0KHRva2VuKTsKICAgIHJldHVybiBjb25maWc7CiAgfQp9LCBmdW5jdGlvbiAoZXJyKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycik7Cn0pOyAvLyDlk43lupTmi6bmiKrlmagKCi8qIGluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgKICByZXNwb25zZSA9PiB7CiAgLy8g5Yig6ZmkdG9rZW4KICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT09IDQwNCkgewogICAgICByZW1vdmVpdGVtKCd0b2tlbicpCiAgICAgIHdpbmRvdy5vcGVuKCcvb2F1dGgvbG9naW4nLCAnX2JsYW5rJykKICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YS50b2tlbikgewogICAgICBnZXRJdGVtKCd0b2tlbicsIHJlc3BvbnNlLmRhdGEudG9rZW4pCiAgICB9CiAgICByZXR1cm4gcmVzcG9uc2UKICB9LCBlcnIgPT4gewogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycikKICB9CikgKi8KCmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlOw=="},{"version":3,"sources":["/Users/yujunxiong/Desktop/shopFrontEnd/shopcart/src/utils/request.js"],"names":["store","axios","setItem","getItem","removeitem","instance","create","baseURL","interceptors","request","use","config","token","state","headers","Authorization","err","Promise","reject"],"mappings":";AAAA;;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,QAA6C,iBAA7C;AACA;AACA;AACA;;AACA,IAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAjB,C,CACA;AACA;;AACAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAAAC,MAAM,EAAI;AACR,MAAMC,KAAK,GAAGZ,KAAK,CAACa,KAAN,CAAYD,KAA1B;;AACA,MAAIA,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,iBAAsCH,KAAtC;AACA,WAAOD,MAAP;AACD;AACF,CAPH,EAQE,UAAAK,GAAG,EAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAVH,E,CAYA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeX,QAAf","sourcesContent":["// request.js\n/*\n 对axios进行二次封装 请求拦截器增加token 响应拦截器处理大数据\n*/\nimport store from '@/store/index'\nimport axios from 'axios'\nimport { setItem, getItem, removeitem } from '@/utils/storage'\n/*\n自定义写法：const xxx = axios.create({}) 一个项目中可能有不同的服务器基础地址 就要用自定义写法设置不同的服务器基础地址\n*/\nconst instance = axios.create({ baseURL: 'http://127.0.0.1:8000' })\n// 在instance(这是上面定义的自定义axios请求名称)上添加请求拦截器 补充请求头token信息\n// 请求拦截器\ninstance.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers.Authorization = `JWT ${token}`\n      return config\n    }\n  },\n  err => {\n    return Promise.reject(err)\n  }\n)\n// 响应拦截器\n/* instance.interceptors.request.use(\n  response => {\n  // 删除token\n    if (response.data.code === 404) {\n      removeitem('token')\n      window.open('/oauth/login', '_blank')\n    } else if (response.data.token) {\n      getItem('token', response.data.token)\n    }\n    return response\n  }, err => {\n    return Promise.reject(err)\n  }\n) */\nexport default instance\n"]}]}